{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floorf = require( '@stdlib/math-base-special-floorf' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite single-precision floating-point number is a nonnegative integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeIntegerf( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeIntegerf( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeIntegerf( -10.0 );\n* // returns false\n*/\nfunction isNonNegativeIntegerf( x ) {\n\treturn ( floorf( x ) === x && x >= 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeIntegerf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite single-precision floating-point number is a nonnegative integer.\n*\n* @module @stdlib/math-base-assert-is-nonnegative-integerf\n*\n* @example\n* var isNonNegativeIntegerf = require( '@stdlib/math-base-assert-is-nonnegative-integerf' );\n*\n* var bool = isNonNegativeIntegerf( 1.0 );\n* // returns true\n*\n* bool = isNonNegativeIntegerf( 0.0 );\n* // returns true\n*\n* bool = isNonNegativeIntegerf( -10.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,kCAAmC,EAuBzD,SAASC,EAAuBC,EAAI,CACnC,OAASF,EAAQE,CAAE,IAAMA,GAAKA,GAAK,CACpC,CAKAH,EAAO,QAAUE,ICZjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "floorf", "isNonNegativeIntegerf", "x", "main"]
}
