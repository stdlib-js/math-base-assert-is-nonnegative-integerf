{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floorf from '@stdlib/math-base-special-floorf';\n\n\n// MAIN //\n\n/**\n* Tests if a finite single-precision floating-point number is a nonnegative integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeIntegerf( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeIntegerf( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeIntegerf( -10.0 );\n* // returns false\n*/\nfunction isNonNegativeIntegerf( x ) {\n\treturn ( floorf( x ) === x && x >= 0 );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeIntegerf;\n"],"names":["isNonNegativeIntegerf","x","floorf"],"mappings":";;mGA6CA,SAASA,EAAuBC,GAC/B,OAASC,EAAQD,KAAQA,GAAKA,GAAK,CACpC"}